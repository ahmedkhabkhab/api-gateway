apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: 9000
    spec:
      containers:
        - image: api-gateway
          name: api-gateway
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          env:
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-service
            - name: CATALOG_SERVICE_URL
              value: http://catalog-service
            - name: ORDER_SERVICE_URL
              value: http://order-service
            - name: SPRING_REDIS_HOST
              value: polar-redis
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI
              value: http://polar-keycloak/realms/PolarBookshop
            - name: SPA_URL
              value: http://polar-ui
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 15